# -*- coding: utf-8 -*-
"""Delete Entire Binary Tree Using Python List.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o3AxP5v3GsOGMRVuDqzYNxopcHy3BuPj
"""

class BinaryTree:
    def __init__(self,size):
        self.customList = size * [None]
        self.lastUsedIndex = 0
        self.maxSize = size

    def insertNode(self,value):
        if self.lastUsedIndex + 1 == self.maxSize:
            return "the binary tree is full"

        self.customList[self.lastUsedIndex + 1] = value
        self.lastUsedIndex += 1
        return "the value has been successfully inserted"

    def deleteNode(self,value):
        if self.lastUsedIndex == 0:
            return "There is not any node "

        for i in range(1,self.lastUsedIndex+1):
            if self.customList[i] == value:
                self.customList[i] == self.customList[self.lastUsedIndex]
                self.customList[self.lastUsedIndex] = None
                self.lastUsedIndex -= 1
                return "the Node has been successfully deleted"

    def deleteBT(self):
        self.customList = None
        return "The BT has been SuccessfullY deleted"

newBT = BinaryTree(8)
newBT.insertNode(input())
newBT.insertNode(input())
newBT.insertNode(input())
newBT.insertNode(input())
newBT.insertNode(input())


newBT.deleteBT()